$date
	Sat Mar  2 15:14:38 2019
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module testbench $end
$var wire 32 ! zero [31:0] $end
$var wire 32 " minus_ext_imm [31:0] $end
$var wire 32 # ext_imm2 [31:0] $end
$var wire 32 $ ext_imm [31:0] $end
$var reg 12 % imm [11:0] $end
$scope module neg $end
$var wire 32 & x [31:0] $end
$var wire 32 ' minus_x [31:0] $end
$upscope $end
$scope module se $end
$var wire 12 ( imm [11:0] $end
$var wire 1 ) msb $end
$var wire 32 * ext_imm [31:0] $end
$var wire 20 + ext [19:0] $end
$upscope $end
$scope module se2 $end
$var wire 12 , imm [11:0] $end
$var wire 1 - msb $end
$var wire 32 . ext_imm [31:0] $end
$var wire 20 / ext [19:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 /
b0 .
0-
b0 ,
b0 +
b0 *
0)
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#20
b11111111111111111111111111111011 "
b11111111111111111111111111111011 '
b0 !
b101 $
b101 &
b101 *
b101 #
b101 .
b101 %
b101 (
b101 ,
#40
b11111111111111111111111111110100 "
b11111111111111111111111111110100 '
b0 !
b1100 $
b1100 &
b1100 *
b1100 #
b1100 .
b1100 %
b1100 (
b1100 ,
#60
b11111111111111111111 /
1-
b11111111111111111111 +
1)
b101 "
b101 '
b0 !
b11111111111111111111111111111011 $
b11111111111111111111111111111011 &
b11111111111111111111111111111011 *
b11111111111111111111111111111011 #
b11111111111111111111111111111011 .
b111111111011 %
b111111111011 (
b111111111011 ,
#80
b1100 "
b1100 '
b0 !
b11111111111111111111111111110100 $
b11111111111111111111111111110100 &
b11111111111111111111111111110100 *
b11111111111111111111111111110100 #
b11111111111111111111111111110100 .
b111111110100 %
b111111110100 (
b111111110100 ,
#100
b0 /
0-
b0 +
0)
b11111111111111111111101011000111 "
b11111111111111111111101011000111 '
b0 !
b10100111001 $
b10100111001 &
b10100111001 *
b10100111001 #
b10100111001 .
b10100111001 %
b10100111001 (
b10100111001 ,
#120
b11111111111111111111 /
1-
b11111111111111111111 +
1)
b11111100011 "
b11111100011 '
b0 !
b11111111111111111111100000011101 $
b11111111111111111111100000011101 &
b11111111111111111111100000011101 *
b11111111111111111111100000011101 #
b11111111111111111111100000011101 .
b100000011101 %
b100000011101 (
b100000011101 ,
#140
